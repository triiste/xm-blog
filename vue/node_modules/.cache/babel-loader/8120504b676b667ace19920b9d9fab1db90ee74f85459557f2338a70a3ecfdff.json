{"ast":null,"code":"import E from \"wangeditor\";\nimport hljs from \"highlight.js\";\nimport axios from \"axios\";\nimport Footer from \"@/components/Footer\";\nexport default {\n  components: {\n    Footer\n  },\n  name: \"NewBlog\",\n  data() {\n    return {\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      tagsArr: [],\n      categoryList: [],\n      editor: null,\n      blogId: this.$route.query.blogId\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      E.markdownIt; // 此处确保 markdownIt 已被正确初始化\n      // 如果有其他需要初始化的配置，可以在这里进行设置\n    });\n\n    this.$request.get('/category/selectAll').then(res => {\n      this.categoryList = res.data || [];\n    });\n    this.$request.get('/blog/selectById/' + this.blogId).then(res => {\n      this.form = res.data || {};\n      if (this.form.id) {\n        this.tagsArr = JSON.parse(this.form.tags || '[]');\n        // setTimeout(() => {\n        //   this.editor.txt.html(this.form.content)\n        // }, 0)\n      }\n    });\n    // this.setRichText()\n  },\n\n  methods: {\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.tags = JSON.stringify(this.tagsArr); // 把json数组转换成json字符串存到数据库\n          // this.form.content = this.editor.txt.html()\n          this.$request({\n            url: this.form.id ? '/blog/update' : '/blog/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              if (!this.form.id) {\n                console.log(res.data);\n                this.$message.success('发布成功');\n                setTimeout(() => {\n                  location.href = \"/front/blogDetail?blogId=\" + parseInt(res.data.id);\n                }, 500);\n              } else {\n                this.$message.success('保存成功');\n                setTimeout(() => {\n                  location.href = \"/front/blogDetail?blogId=\" + this.form.id;\n                }, 500);\n              }\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    handleCoverSuccess(res) {\n      this.form.cover = res.data;\n    },\n    setRichText() {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.highlight = hljs;\n        this.editor.config.uploadImgServer = 'http://127.0.0.1:9090' + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.config.zIndex = 0;\n        this.editor.create(); // 创建\n      });\n    },\n\n    // 绑定@imgAdd event\n    imgAdd(pos, $file) {\n      let $vm = this.$refs.md;\n      // 第一步.将图片上传到服务器.\n      const formData = new FormData();\n      formData.append('file', $file);\n      axios({\n        url: 'http://127.0.0.1:9090/files/editor/upload',\n        method: 'post',\n        data: formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        // 在Markdown文本中插入图片\n        var url = res.data.data[0].url;\n        // console.log(url)\n        // const markdownText = `http://127.0.0.1:9090/files/1705996022610-头像.jpg`;\n        $vm.$img2Url(pos, url);\n      });\n    }\n  }\n};","map":{"version":3,"names":["E","hljs","axios","Footer","components","name","data","form","user","JSON","parse","localStorage","getItem","rules","tagsArr","categoryList","editor","blogId","$route","query","mounted","$nextTick","markdownIt","$request","get","then","res","id","tags","methods","save","$refs","formRef","validate","valid","stringify","url","method","code","console","log","$message","success","setTimeout","location","href","parseInt","error","msg","handleCoverSuccess","cover","setRichText","highlight","config","uploadImgServer","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","zIndex","create","imgAdd","pos","$file","$vm","md","formData","FormData","append","headers","$img2Url"],"sources":["src/views/front/NewBlog.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 50%; margin: 5px auto\">\r\n    <div class=\"card\" style=\"margin-bottom: 100px\">\r\n      <div style=\"font-weight: bold; font-size: 24px; margin-bottom: 50px\">发表新博客/编辑博客</div>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"简介\" prop=\"descr\">\r\n          <el-input type=\"textarea\" v-model=\"form.descr\" placeholder=\"简介\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\" prop=\"cover\">\r\n          <el-upload\r\n              :action=\"'http://127.0.0.1:9090' + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleCoverSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传封面</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"categoryId\">\r\n          <el-select v-model=\"form.categoryId\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"标签\" prop=\"tags\">\r\n          <el-select v-model=\"tagsArr\" multiple filterable allow-create default-first-option style=\"width: 100%\">\r\n            <el-option value=\"后端\"></el-option>\r\n            <el-option value=\"Java\"></el-option>\r\n            <el-option value=\"面试\"></el-option>\r\n            <el-option value=\"Vue\"></el-option>\r\n            <el-option value=\"前端\"></el-option>\r\n            <el-option value=\"大数据\"></el-option>\r\n            <el-option value=\"算法\"></el-option>\r\n            <el-option value=\"程序员\"></el-option>\r\n            <el-option value=\"小白\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n<!--        <el-form-item label=\"内容\" prop=\"content\">-->\r\n<!--          <div id=\"editor\"></div>-->\r\n<!--        </el-form-item>-->\r\n<!--        style=\"height: 200px\"-->\r\n        <el-form-item label=\"文章内容\" prop=\"content\" style=\"max-height: 300px; overflow-y: auto\">\r\n          <mavon-editor ref=\"md\" v-model=\"form.content\" :ishljs=\"true\" @imgAdd=\"imgAdd\"/>\r\n        </el-form-item>\r\n\r\n\r\n      </el-form>\r\n      <div style=\"text-align: center\"><el-button type=\"primary\" size=\"medium\" style=\"width: 100px\" @click=\"save\">保 存</el-button></div>\r\n\r\n    </div>\r\n\r\n    <Footer />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\";\r\nimport hljs from \"highlight.js\";\r\nimport axios from \"axios\";\r\nimport Footer from \"@/components/Footer\";\r\n\r\n\r\n\r\n\r\nexport default {\r\n  components: {\r\n    Footer\r\n  },\r\n  name: \"NewBlog\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {},\r\n      tagsArr: [],\r\n      categoryList: [],\r\n      editor: null,\r\n      blogId: this.$route.query.blogId\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      E.markdownIt; // 此处确保 markdownIt 已被正确初始化\r\n      // 如果有其他需要初始化的配置，可以在这里进行设置\r\n    });\r\n\r\n    this.$request.get('/category/selectAll').then(res => {\r\n      this.categoryList = res.data || []\r\n    })\r\n\r\n    this.$request.get('/blog/selectById/' + this.blogId).then(res => {\r\n      this.form = res.data || {}\r\n      if (this.form.id) {\r\n        this.tagsArr = JSON.parse(this.form.tags || '[]')\r\n        // setTimeout(() => {\r\n        //   this.editor.txt.html(this.form.content)\r\n        // }, 0)\r\n      }\r\n    })\r\n    // this.setRichText()\r\n  },\r\n  methods: {\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.tags = JSON.stringify(this.tagsArr)  // 把json数组转换成json字符串存到数据库\r\n          // this.form.content = this.editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/blog/update' : '/blog/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              if(!this.form.id){\r\n                console.log(res.data)\r\n                this.$message.success('发布成功')\r\n                setTimeout(() => {\r\n                  location.href = \"/front/blogDetail?blogId=\"+parseInt(res.data.id)\r\n                },500)\r\n              }else{\r\n                this.$message.success('保存成功')\r\n                setTimeout(() => {\r\n                  location.href = \"/front/blogDetail?blogId=\"+this.form.id\r\n                }, 500)\r\n              }\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleCoverSuccess(res) {\r\n      this.form.cover = res.data\r\n    },\r\n    setRichText() {\r\n      this.$nextTick(() => {\r\n        this.editor = new E(`#editor`)\r\n        this.editor.highlight = hljs\r\n        this.editor.config.uploadImgServer = 'http://127.0.0.1:9090' + '/files/editor/upload'\r\n        this.editor.config.uploadFileName = 'file'\r\n        this.editor.config.uploadImgHeaders = {\r\n          token: this.user.token\r\n        }\r\n        this.editor.config.uploadImgParams = {\r\n          type: 'img',\r\n        }\r\n        this.editor.config.zIndex = 0\r\n        this.editor.create()  // 创建\r\n      })\r\n    },\r\n    // 绑定@imgAdd event\r\n      imgAdd(pos, $file) {\r\n      let $vm = this.$refs.md\r\n      // 第一步.将图片上传到服务器.\r\n      const formData = new FormData();\r\n      formData.append('file', $file);\r\n      axios({\r\n        url: 'http://127.0.0.1:9090/files/editor/upload',\r\n        method: 'post',\r\n        data: formData,\r\n        headers: {'Content-Type': 'multipart/form-data'},\r\n      }).then((res) => {\r\n        // 在Markdown文本中插入图片\r\n        var url = res.data.data[0].url\r\n        // console.log(url)\r\n        // const markdownText = `http://127.0.0.1:9090/files/1705996022610-头像.jpg`;\r\n        $vm.$img2Url(pos, url);\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 根据需要调整高度 */\r\n.el-form-item__content .mavon-editor {\r\n  max-height: 300px !important;\r\n  overflow-y: auto !important; /* 添加垂直滚动条 */\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}