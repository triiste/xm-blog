{"ast":null,"code":"// 文件：store/modules/websocket.js\nimport VueNativeSock from 'vue-native-websocket';\nconst state = {\n  websocket: null\n};\nconst mutations = {\n  SET_WEBSOCKET(state, websocket) {\n    state.websocket = websocket;\n  }\n};\nconst actions = {\n  initializeWebSocket({\n    commit,\n    dispatch,\n    state\n  }) {\n    const websocket = new VueNativeSock('ws://example.com/socket', {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 3000\n    });\n    websocket.$on('open', () => {\n      console.log('WebSocket connected!');\n      commit('SET_WEBSOCKET', websocket);\n    });\n    websocket.$on('close', event => {\n      console.log('WebSocket closed:', event);\n      // 可以在这里处理重新连接的逻辑\n    });\n\n    websocket.$on('error', error => {\n      console.error('WebSocket error:', error);\n    });\n  }\n\n  // 其他 actions，例如发送消息等\n};\n\nexport default {\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["VueNativeSock","state","websocket","mutations","SET_WEBSOCKET","actions","initializeWebSocket","commit","dispatch","reconnection","reconnectionAttempts","reconnectionDelay","$on","console","log","event","error"],"sources":["C:/Users/wcf/springboot-vue框架实操/xm-blog/vue/src/utils/websocket.js"],"sourcesContent":["// 文件：store/modules/websocket.js\r\nimport VueNativeSock from 'vue-native-websocket';\r\n\r\nconst state = {\r\n    websocket: null\r\n};\r\n\r\nconst mutations = {\r\n    SET_WEBSOCKET(state, websocket) {\r\n        state.websocket = websocket;\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    initializeWebSocket({ commit, dispatch, state }) {\r\n        const websocket = new VueNativeSock('ws://example.com/socket', {\r\n            reconnection: true,\r\n            reconnectionAttempts: 5,\r\n            reconnectionDelay: 3000,\r\n        });\r\n\r\n        websocket.$on('open', () => {\r\n            console.log('WebSocket connected!');\r\n            commit('SET_WEBSOCKET', websocket);\r\n        });\r\n\r\n        websocket.$on('close', (event) => {\r\n            console.log('WebSocket closed:', event);\r\n            // 可以在这里处理重新连接的逻辑\r\n        });\r\n\r\n        websocket.$on('error', (error) => {\r\n            console.error('WebSocket error:', error);\r\n        });\r\n    },\r\n\r\n    // 其他 actions，例如发送消息等\r\n};\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,sBAAsB;AAEhD,MAAMC,KAAK,GAAG;EACVC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAG;EACdC,aAAaA,CAACH,KAAK,EAAEC,SAAS,EAAE;IAC5BD,KAAK,CAACC,SAAS,GAAGA,SAAS;EAC/B;AACJ,CAAC;AAED,MAAMG,OAAO,GAAG;EACZC,mBAAmBA,CAAC;IAAEC,MAAM;IAAEC,QAAQ;IAAEP;EAAM,CAAC,EAAE;IAC7C,MAAMC,SAAS,GAAG,IAAIF,aAAa,CAAC,yBAAyB,EAAE;MAC3DS,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE;IACvB,CAAC,CAAC;IAEFT,SAAS,CAACU,GAAG,CAAC,MAAM,EAAE,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCP,MAAM,CAAC,eAAe,EAAEL,SAAS,CAAC;IACtC,CAAC,CAAC;IAEFA,SAAS,CAACU,GAAG,CAAC,OAAO,EAAGG,KAAK,IAAK;MAC9BF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,KAAK,CAAC;MACvC;IACJ,CAAC,CAAC;;IAEFb,SAAS,CAACU,GAAG,CAAC,OAAO,EAAGI,KAAK,IAAK;MAC9BH,OAAO,CAACG,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACN;;EAEA;AACJ,CAAC;;AAED,eAAe;EACXf,KAAK;EACLE,SAAS;EACTE;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}