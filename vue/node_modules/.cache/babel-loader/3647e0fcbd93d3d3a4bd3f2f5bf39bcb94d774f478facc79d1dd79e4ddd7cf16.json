{"ast":null,"code":"import request from \"@/utils/request\";\nimport emojis from \"@/assets/emoji\";\nexport default {\n  data() {\n    return {\n      user: {},\n      permission: [],\n      emojis: [],\n      messages: [],\n      users: {},\n      fromUser: '',\n      // 当前用户\n      toUser: '',\n      toAvatar: '',\n      unRead: {},\n      toUserName: '',\n      timeIntervalThreshold: 3 * 60 * 1000\n    };\n  },\n  mounted() {},\n  methods: {\n    initializeWebSocket(userId) {\n      this.websocket = new WebSocket(`ws://localhost:9090/imserverSingle/${userId}`);\n      this.websocket.onopen = this.onWebSocketOpen;\n      this.websocket.onclose = this.onWebSocketClose;\n      this.websocket.onmessage = this.onWebSocketMessage;\n    },\n    onWebSocketOpen() {\n      console.log('WebSocket连接已打开');\n      // 连接成功后的逻辑，例如获取初始数据\n    },\n\n    onWebSocketClose() {\n      console.log('WebSocket连接已关闭');\n      // 连接关闭后的逻辑\n    },\n\n    onWebSocketMessage(msg) {\n      if (msg.data) {\n        // 检查接收到的消息是否存在。\n        let json = JSON.parse(msg.data);\n        if (json.users && json.users.length) {\n          this.loadOnline(json);\n          return;\n        }\n      }\n    }\n    // 处理收到的WebSocket消息\n  }\n};","map":{"version":3,"names":["request","emojis","data","user","permission","messages","users","fromUser","toUser","toAvatar","unRead","toUserName","timeIntervalThreshold","mounted","methods","initializeWebSocket","userId","websocket","WebSocket","onopen","onWebSocketOpen","onclose","onWebSocketClose","onmessage","onWebSocketMessage","console","log","msg","json","JSON","parse","length","loadOnline"],"sources":["C:/Users/wcf/springboot-vue框架实操/xm-blog/vue/src/store/websocketMixin.js"],"sourcesContent":["import request from \"@/utils/request\";\r\nimport emojis from \"@/assets/emoji\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            user: {},\r\n            permission: [],\r\n            emojis: [],\r\n            messages: [],\r\n            users: {},\r\n            fromUser: '',// 当前用户\r\n            toUser: '',\r\n            toAvatar: '',\r\n            unRead: {},\r\n            toUserName:'',\r\n            timeIntervalThreshold: 3 * 60 * 1000\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        initializeWebSocket(userId) {\r\n            this.websocket = new WebSocket(`ws://localhost:9090/imserverSingle/${userId}`);\r\n            this.websocket.onopen = this.onWebSocketOpen;\r\n            this.websocket.onclose = this.onWebSocketClose;\r\n            this.websocket.onmessage = this.onWebSocketMessage;\r\n        },\r\n        onWebSocketOpen() {\r\n            console.log('WebSocket连接已打开');\r\n            // 连接成功后的逻辑，例如获取初始数据\r\n        },\r\n        onWebSocketClose() {\r\n            console.log('WebSocket连接已关闭');\r\n            // 连接关闭后的逻辑\r\n        },\r\n        onWebSocketMessage(msg) {\r\n            if (msg.data) { // 检查接收到的消息是否存在。\r\n                let json = JSON.parse(msg.data)\r\n                if (json.users && json.users.length){\r\n                    this.loadOnline(json);\r\n                    return\r\n                }\r\n\r\n                }\r\n            }\r\n            // 处理收到的WebSocket消息\r\n        },\r\n\r\n};\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,CAAC,CAAC;MACRC,UAAU,EAAE,EAAE;MACdH,MAAM,EAAE,EAAE;MACVI,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,CAAC,CAAC;MACTC,QAAQ,EAAE,EAAE;MAAC;MACbC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,CAAC,CAAC;MACVC,UAAU,EAAC,EAAE;MACbC,qBAAqB,EAAE,CAAC,GAAG,EAAE,GAAG;IACpC,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG,CACV,CAAC;EACDC,OAAO,EAAE;IACLC,mBAAmBA,CAACC,MAAM,EAAE;MACxB,IAAI,CAACC,SAAS,GAAG,IAAIC,SAAS,CAAE,sCAAqCF,MAAO,EAAC,CAAC;MAC9E,IAAI,CAACC,SAAS,CAACE,MAAM,GAAG,IAAI,CAACC,eAAe;MAC5C,IAAI,CAACH,SAAS,CAACI,OAAO,GAAG,IAAI,CAACC,gBAAgB;MAC9C,IAAI,CAACL,SAAS,CAACM,SAAS,GAAG,IAAI,CAACC,kBAAkB;IACtD,CAAC;IACDJ,eAAeA,CAAA,EAAG;MACdK,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B;IACJ,CAAC;;IACDJ,gBAAgBA,CAAA,EAAG;MACfG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B;IACJ,CAAC;;IACDF,kBAAkBA,CAACG,GAAG,EAAE;MACpB,IAAIA,GAAG,CAACzB,IAAI,EAAE;QAAE;QACZ,IAAI0B,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACzB,IAAI,CAAC;QAC/B,IAAI0B,IAAI,CAACtB,KAAK,IAAIsB,IAAI,CAACtB,KAAK,CAACyB,MAAM,EAAC;UAChC,IAAI,CAACC,UAAU,CAACJ,IAAI,CAAC;UACrB;QACJ;MAEA;IACJ;IACA;EACJ;AAER,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}