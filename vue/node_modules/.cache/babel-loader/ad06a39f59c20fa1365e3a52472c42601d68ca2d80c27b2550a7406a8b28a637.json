{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nlet targetContent = '';\n\n// 获取所有的标题元素\nfunction getElements() {\n  const parser = new DOMParser();\n  const htmlDocument = parser.parseFromString(targetContent, 'text/html');\n  const elements = htmlDocument.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n  return elements;\n}\n// 获取父级的标题\nfunction getMinSize() {\n  const elements = [...getElements()];\n  let arr = [];\n  elements.forEach(item => {\n    arr.push(parseInt(item.nodeName.replace('H', '')));\n  });\n  return Math.min(...arr);\n}\n//获取所有的父级节点\nfunction getFatherNode() {\n  let minSize = getMinSize();\n  const elements = Array.from(getElements());\n  const arr = [];\n  elements.forEach((item, index) => {\n    let level = parseInt(item.nodeName.replace('H', ''));\n    if (level == minSize) {\n      let obj = {\n        'title': item.innerText,\n        'level': level,\n        'eleIndex': index\n      };\n      arr.push(obj);\n    }\n  });\n  return arr;\n}\n// 返回生成的toc数据结构\nexport function randerMarkDownToc(data) {\n  targetContent = data;\n  const elements = getElements();\n  let fatherElements = getFatherNode();\n  let tocArr = [];\n  fatherElements.forEach(item => {\n    let obj = {\n      ...item,\n      'children': getChildrenArr(elements, item.eleIndex, item.level)\n    };\n    tocArr.push(obj);\n  });\n  return tocArr;\n}\n// 获取子级toc\nfunction getChildrenArr(targetArr, startIndex, targetLevel) {\n  const childrenArr = [];\n  for (let i = startIndex + 1; i < targetArr.length; i++) {\n    let level = parseInt(targetArr[i].nodeName.replace('H', ''));\n    if (targetLevel + 1 === level && (childrenArr.length === 0 || i - childrenArr[childrenArr.length - 1].eleIndex == 1)) {\n      if (i - startIndex > 1 && childrenArr.length == 0) {\n        return childrenArr;\n      }\n      // 这里用的递归 俗称套娃\n      let obj = {\n        'title': targetArr[i].innerText,\n        'level': level,\n        'eleIndex': i,\n        'children': getChildrenArr(targetArr, i, level)\n      };\n      childrenArr.push(obj);\n    }\n  }\n  return childrenArr;\n}","map":{"version":3,"names":["targetContent","getElements","parser","DOMParser","htmlDocument","parseFromString","elements","querySelectorAll","getMinSize","arr","forEach","item","push","parseInt","nodeName","replace","Math","min","getFatherNode","minSize","Array","from","index","level","obj","innerText","randerMarkDownToc","data","fatherElements","tocArr","getChildrenArr","eleIndex","targetArr","startIndex","targetLevel","childrenArr","i","length"],"sources":["C:/Users/wcf/springboot-vue框架实操/xm-blog/vue/src/utils/toc.js"],"sourcesContent":["let targetContent = ''\r\n\r\n// 获取所有的标题元素\r\nfunction getElements() {\r\n    const parser = new DOMParser();\r\n    const htmlDocument = parser.parseFromString(targetContent, 'text/html');\r\n    const elements = htmlDocument.querySelectorAll(\"h1,h2,h3,h4,h5,h6\")\r\n    return elements;\r\n}\r\n// 获取父级的标题\r\nfunction getMinSize() {\r\n    const elements = [...getElements()]\r\n    let arr = []\r\n    elements.forEach(item => {\r\n        arr.push(parseInt(item.nodeName.replace('H', '')))\r\n    })\r\n    return Math.min(...arr)\r\n}\r\n//获取所有的父级节点\r\nfunction getFatherNode() {\r\n    let minSize = getMinSize()\r\n    const elements = Array.from(getElements());\r\n    const arr = []\r\n    elements.forEach((item, index) => {\r\n        let level = parseInt(item.nodeName.replace('H', ''))\r\n        if (level == minSize) {\r\n            let obj = { 'title': item.innerText, 'level': level, 'eleIndex': index }\r\n            arr.push(obj)\r\n        }\r\n    })\r\n    return arr\r\n}\r\n// 返回生成的toc数据结构\r\nexport function randerMarkDownToc(data) {\r\n    targetContent = data\r\n    const elements = getElements()\r\n    let fatherElements = getFatherNode()\r\n    let tocArr = []\r\n    fatherElements.forEach(item => {\r\n        let obj = { ...item, 'children': getChildrenArr(elements, item.eleIndex, item.level) }\r\n        tocArr.push(obj)\r\n    })\r\n    return tocArr\r\n}\r\n// 获取子级toc\r\nfunction getChildrenArr(targetArr, startIndex, targetLevel) {\r\n    const childrenArr = []\r\n    for (let i = startIndex + 1; i < targetArr.length; i++) {\r\n        let level = parseInt(targetArr[i].nodeName.replace('H', ''))\r\n        if (targetLevel + 1 === level && (childrenArr.length === 0 || i - childrenArr[childrenArr.length - 1].eleIndex == 1)) {\r\n            if (i - startIndex > 1 && childrenArr.length == 0) {\r\n                return childrenArr\r\n            }\r\n            // 这里用的递归 俗称套娃\r\n            let obj = { 'title': targetArr[i].innerText, 'level': level, 'eleIndex': i, 'children': getChildrenArr(targetArr, i, level) }\r\n            childrenArr.push(obj)\r\n        }\r\n    }\r\n    return childrenArr\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}