{"version":3,"file":"js/936.57c9efef.js","mappings":"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","sources":["webpack://vue/./src/views/front/NewBlog.vue","webpack://vue/src/views/front/NewBlog.vue","webpack://vue/./src/views/front/NewBlog.vue?1868","webpack://vue/./src/views/front/NewBlog.vue?2a6c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"50%\",\"margin\":\"5px auto\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"margin-bottom\":\"100px\"}},[_c('div',{staticStyle:{\"font-weight\":\"bold\",\"font-size\":\"24px\",\"margin-bottom\":\"50px\"}},[_vm._v(\"发表新博客/编辑博客\")]),_c('el-form',{ref:\"formRef\",staticStyle:{\"padding-right\":\"50px\"},attrs:{\"model\":_vm.form,\"label-width\":\"100px\",\"rules\":_vm.rules}},[_c('el-form-item',{attrs:{\"label\":\"标题\",\"prop\":\"title\"}},[_c('el-input',{attrs:{\"placeholder\":\"标题\"},model:{value:(_vm.form.title),callback:function ($$v) {_vm.$set(_vm.form, \"title\", $$v)},expression:\"form.title\"}})],1),_c('el-form-item',{attrs:{\"label\":\"简介\",\"prop\":\"descr\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"简介\"},model:{value:(_vm.form.descr),callback:function ($$v) {_vm.$set(_vm.form, \"descr\", $$v)},expression:\"form.descr\"}})],1),_c('el-form-item',{attrs:{\"label\":\"封面\",\"prop\":\"cover\"}},[_c('el-upload',{attrs:{\"action\":_vm.$baseUrl + '/files/upload',\"headers\":{ token: _vm.user.token },\"list-type\":\"picture\",\"on-success\":_vm.handleCoverSuccess}},[_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"上传封面\")])],1)],1),_c('el-form-item',{attrs:{\"label\":\"分类\",\"prop\":\"categoryId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},model:{value:(_vm.form.categoryId),callback:function ($$v) {_vm.$set(_vm.form, \"categoryId\", $$v)},expression:\"form.categoryId\"}},_vm._l((_vm.categoryList),function(item){return _c('el-option',{key:item.id,attrs:{\"value\":item.id,\"label\":item.name}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"标签\",\"prop\":\"tags\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"multiple\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\"},model:{value:(_vm.tagsArr),callback:function ($$v) {_vm.tagsArr=$$v},expression:\"tagsArr\"}},[_c('el-option',{attrs:{\"value\":\"后端\"}}),_c('el-option',{attrs:{\"value\":\"Java\"}}),_c('el-option',{attrs:{\"value\":\"面试\"}}),_c('el-option',{attrs:{\"value\":\"Vue\"}}),_c('el-option',{attrs:{\"value\":\"前端\"}}),_c('el-option',{attrs:{\"value\":\"大数据\"}}),_c('el-option',{attrs:{\"value\":\"算法\"}}),_c('el-option',{attrs:{\"value\":\"程序员\"}}),_c('el-option',{attrs:{\"value\":\"小白\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"内容\",\"prop\":\"content\"}},[_c('div',{attrs:{\"id\":\"editor\"}})])],1),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{staticStyle:{\"width\":\"100px\"},attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.save}},[_vm._v(\"保 存\")])],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"width: 50%; margin: 5px auto\">\r\n    <div class=\"card\" style=\"margin-bottom: 100px\">\r\n      <div style=\"font-weight: bold; font-size: 24px; margin-bottom: 50px\">发表新博客/编辑博客</div>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"简介\" prop=\"descr\">\r\n          <el-input type=\"textarea\" v-model=\"form.descr\" placeholder=\"简介\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\" prop=\"cover\">\r\n          <el-upload\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleCoverSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传封面</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"categoryId\">\r\n          <el-select v-model=\"form.categoryId\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"标签\" prop=\"tags\">\r\n          <el-select v-model=\"tagsArr\" multiple filterable allow-create default-first-option style=\"width: 100%\">\r\n            <el-option value=\"后端\"></el-option>\r\n            <el-option value=\"Java\"></el-option>\r\n            <el-option value=\"面试\"></el-option>\r\n            <el-option value=\"Vue\"></el-option>\r\n            <el-option value=\"前端\"></el-option>\r\n            <el-option value=\"大数据\"></el-option>\r\n            <el-option value=\"算法\"></el-option>\r\n            <el-option value=\"程序员\"></el-option>\r\n            <el-option value=\"小白\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <div id=\"editor\"></div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align: center\"><el-button type=\"primary\" size=\"medium\" style=\"width: 100px\" @click=\"save\">保 存</el-button></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\";\r\nimport hljs from \"highlight.js\";\r\n\r\nexport default {\r\n  name: \"NewBlog\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {},\r\n      tagsArr: [],\r\n      categoryList: [],\r\n      editor: null,\r\n      blogId: this.$route.query.blogId\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$request.get('/category/selectAll').then(res => {\r\n      this.categoryList = res.data || []\r\n    })\r\n\r\n    this.$request.get('/blog/selectById/' + this.blogId).then(res => {\r\n      this.form = res.data || {}\r\n      if (this.form.id) {\r\n        this.tagsArr = JSON.parse(this.form.tags || '[]')\r\n        setTimeout(() => {\r\n          this.editor.txt.html(this.form.content)\r\n        }, 0)\r\n      }\r\n    })\r\n\r\n    this.setRichText()\r\n  },\r\n  methods: {\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.tags = JSON.stringify(this.tagsArr)  // 把json数组转换成json字符串存到数据库\r\n          this.form.content = this.editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/blog/update' : '/blog/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleCoverSuccess(res) {\r\n      this.form.cover = res.data\r\n    },\r\n    setRichText() {\r\n      this.$nextTick(() => {\r\n        this.editor = new E(`#editor`)\r\n        this.editor.highlight = hljs\r\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\r\n        this.editor.config.uploadFileName = 'file'\r\n        this.editor.config.uploadImgHeaders = {\r\n          token: this.user.token\r\n        }\r\n        this.editor.config.uploadImgParams = {\r\n          type: 'img',\r\n        }\r\n        this.editor.config.zIndex = 0\r\n        this.editor.create()  // 创建\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewBlog.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewBlog.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./NewBlog.vue?vue&type=template&id=3a6d205a&scoped=true\"\nimport script from \"./NewBlog.vue?vue&type=script&lang=js\"\nexport * from \"./NewBlog.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3a6d205a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","staticClass","_v","ref","attrs","form","rules","model","value","title","callback","$$v","$set","expression","descr","$baseUrl","token","user","handleCoverSuccess","categoryId","_l","categoryList","item","key","id","name","tagsArr","on","save","staticRenderFns","data","JSON","parse","localStorage","getItem","editor","blogId","$route","query","mounted","$request","get","then","res","tags","setTimeout","txt","html","content","setRichText","methods","$refs","formRef","validate","valid","stringify","url","method","code","$message","success","error","msg","cover","$nextTick","E","highlight","hljs","config","uploadImgServer","uploadFileName","uploadImgHeaders","uploadImgParams","type","zIndex","create","component"],"sourceRoot":""}